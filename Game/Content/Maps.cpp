#include "../Content.hpp"

Engine::Map* Game::Content::MakeMap::cleanSlate(Engine::MapComponent::Metrology::Length length,
    Engine::MapComponent::Metrology::Height height)
{
    return (new Engine::Map(length, height));
}

Engine::Map* Game::Content::MakeMap::createFrom(std::vector<std::string>& tmap)
{
    Engine::Map* ptr = new Engine::Map(tmap);
    if (ptr == nullptr)
	throw(std::exception("Engine Map* == nullptr"));
    return (ptr);
}

Engine::Map* Game::Content::MakeMap::withPrimitiveBarrier()
{
    std::vector<std::string> tmap
    {
	"--------------------------------",
	"----##--------------------------",
	"--####--##----------------------",
	"--------##----------------------",
	"----########--------------------",
	"--------##----------------------",
	"------------######--------------",
	"------------##--##--------------",
	"------------######--------------",
	"--------------------------------",
	"--------------------########--##",
	"--------------------##--##------",
	"--------------------########--##",
	"--------------------##--##------",
	"--------------------------------",
	"--------------------##--##------",
    };
    return (createFrom(tmap));
}

Engine::Map* Game::Content::MakeMap::longway()
{
    std::vector<std::string> tmap
    {
	"----------##----------####--####",
	"--######--##--##--##----##----##",
	"----##----##--########--##------",
	"######--####----####--------##--",
	"##--------####----##--####--##--",
	"####--##----####--############--",
	"--##--########----##------##----",
	"####----####----####--##------##",
	"--------##----####----########--",
	"--####--##--########--------####",
	"####----##--------########----##",
	"--------########--##--------####",
	"--####--##--------##--##########",
	"--########----######--##------##",
	"--##--------####------##--##----",
	"------####----##--##------####--",
    };
    return (createFrom(tmap));
}

Engine::Map* Game::Content::MakeMap::labirint()
{
    std::vector<std::string> tmap
    {
	"--##------##------##------##",
	"--##--##------##--##--##----",
	"--##--##########--##--######",
	"--------------##--##--------",
	"##--##--##--####--##--####--",
	"----##--##----######--##----",
	"--####--########--##--######",
	"------------##----##--------",
	"######--##--####--########--",
	"----##--######----##--------",
	"--------##--##--####--######",
	"----######--------##--------",
	"##--##------####--##--####--",
	"--------########------##----",
    };
    return (createFrom(tmap));
}

Engine::Map* Game::Content::MakeMap::village()
{
    std::vector<std::string> tmap
    {
	"------####----------------------",
	"####--####----########----------",
	"####--####----########----####--",
	"--------------####--------##----",
	"--######------####------######--",
	"--######----------------######--",
	"------------########----######--",
	"--##--##----########------##----",
	"--##--##--------------##--##----",
	"--######------######--##--------",
	"--######------######--##########",
	"--######--------####------------",
	"----------------####--####------",
	"------########--####--####------",
	"------########--------####------",
	"--------------------------------",
    };
    return (createFrom(tmap));
}

Engine::Map* Game::Content::MakeMap::city()
{
    std::vector<std::string> tmap
    {
	"--------------------------------",
	"--####----####################--",
	"--####--####--------------------",
	"--------##----##################",
	"----########--------------------",
	"--####--####################--##",
	"--##------##--------------------",
	"--##--##--##--####----########--",
	"--##--##--##--##----------------",
	"--##--##--##------######--######",
	"--##--##--##------##----------##",
	"--##--##--##--##--##--######--##",
	"--##--##--##--##------##--------",
	"--##--##--##--##--##--##--####--",
	"--##--##------##--##------####--",
	"------##--##------######--------",
    };
    return (createFrom(tmap));
}
